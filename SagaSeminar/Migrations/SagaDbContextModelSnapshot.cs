// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SagaSeminar.Entities;

#nullable disable

namespace SagaSeminar.Migrations
{
    [DbContext(typeof(SagaDbContext))]
    partial class SagaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SagaSeminar.Entities.SagaTransactionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessagePayload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Retryable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId");

                    b.ToTable("SagaTransaction");
                });

            modelBuilder.Entity("SagaSeminar.Entities.TransactionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RunningTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RunningTransactionId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("SagaSeminar.Entities.SagaTransactionEntity", b =>
                {
                    b.HasOne("SagaSeminar.Entities.TransactionEntity", "Transaction")
                        .WithMany("SagaTransactions")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("SagaSeminar.Entities.TransactionEntity", b =>
                {
                    b.HasOne("SagaSeminar.Entities.SagaTransactionEntity", "RunningTransaction")
                        .WithMany()
                        .HasForeignKey("RunningTransactionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("RunningTransaction");
                });

            modelBuilder.Entity("SagaSeminar.Entities.TransactionEntity", b =>
                {
                    b.Navigation("SagaTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
